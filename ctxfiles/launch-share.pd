#N canvas 67 374 450 298 10;
#X declare -path ../;
#X obj 151 25 shared ctxfiles/launch-share;
#X msg 68 193 vis 1;
#X obj 68 215 iemguts/sendcanvas;
#X obj 68 171 receive lshare;
#X obj 68 149 array define dummy@%G 1;
#N canvas 67 87 1299 681 messages 0;
#X obj 134 73 receive YYh&&8(v;
#X obj 201 117 t b a;
#X obj 85 178 cyclone/zl iter 1;
#X msg 320 30 symbol  ;
#X obj 134 95 route bang;
#X obj 893 164 ctxfiles/recompile \$0 lothr;
#X obj 85 199 ctxfiles/br2 route 1 \; :1f0 gtfs \$0 #f 1f0 :s \; :1f1
gtfs \$0 #f 1f1 :ss \; :1f2 gtfs \$0 #f 1f2 -send 2 \; :1f3 gtfs \$0
#f 1f3 -send 3 \; :1f4 gtfs \$0 #f 1f4 :u \; :1f5 gtfs \$0 #f 1f5
find \; :1f6 gtfs \$0 #f 1f6 :r \; :1f7 gtfs \$0 #f 1f7 copy ~ ID
\; :2f0 gtfs \$0 #f 2f0 :s \; :2f1 gtfs \$0 #f 2f1 :ss \; :2f2 gtfs
\$0 #f 2f2 :i << \; :2f3 gtfs \$0 #f 2f3 :i >> \; :2f4 gtfs \$0 #f
2f4 :u \; :2f5 gtfs \$0 #f 2f5 find \; :2f6 gtfs \$0 #f 2f6 :r \; :2f7
gtfs \$0 #f 2f7 -n :x clear :i clear :r -source c % -messages 1 -prepend <i -floats -c % -floatprep 1 -trigger 1 -first 1
\; :3f0 gtfs \$0 #f 3f0 chromatic \; :3f1 gtfs \$0 #f 3f1 major \;
:3f2 gtfs \$0 #f 3f2 minor \; :3f3 gtfs \$0 #f 3f3 pentatonic major
\; :3f4 gtfs \$0 #f 3f4 pentatonic minor \; :3f5 gtfs \$0 #f 3f5 blues major
\; :3f6 gtfs \$0 #f 3f6 blues minor \; :3f7 gtfs \$0 #f 3f7 custom1
\; :4f0 gtfs \$0 #f 4f0 120000 \; :4f1 gtfs \$0 #f 4f1 60000 \; :4f2
gtfs \$0 #f 4f2 30000 \; :4f3 gtfs \$0 #f 4f3 10000 \; :4f4 gtfs \$0
#f 4f4 3000 \; :4f5 gtfs \$0 #f 4f5 1000 \; :4f6 gtfs \$0 #f 4f6 500
\; :4f7 gtfs \$0 #f 4f7 1 \; :qu gtfs \$0 #f qu 0 \, :quantize #l \;
:gui gtfs \$0 #f gui 0 \, :GUI #l \; :sa gtfs \$0 #f sa 1 \; :ac gtfs
\$0 #f ac 0 \; :m1 gtfs \$0 #f m1 bang \; :tx gtfs \$0 #f tx 0 \; buffer
gtfs \$0 #f buffer 20 \; loadproperties tf \$0 #f \; ## s \$0-lothr
, f 134;
#X obj 893 187 ctxfiles/br2 demux 2 \; #f t \; #f gs :1f0 \; #f gs
:1f1 \; #f gs :1f2 \; #f gs :1f3 \; #f gs :1f4 \; #f gs :1f5 \; #f
gs :1f6 \; #f gs :1f7 \; #f gs :2f0 \; #f gs :2f1 \; #f gs :2f2 \;
#f gs :2f3 \; #f gs :2f4 \; #f gs :2f5 \; #f gs :2f6 \; #f gs :2f7
\; #f gs :3f0 \; #f gs :3f1 \; #f gs :3f2 \; #f gs :3f3 \; #f gs :3f4
\; #f gs :3f5 \; #f gs :3f6 \; #f gs :3f7 \; #f gs :4f0 \; #f gs :4f1
\; #f gs :4f2 \; #f gs :4f3 \; #f gs :4f4 \; #f gs :4f5 \; #f gs :4f6
\; #f gs :4f7 \; #f gs :qu \; #f gs :gui \; #f gs :sa \; #f gs :ac
\; #f gs :m1 \; #f gs :tx \; #f s buffertime%^% \; #f gs propload;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 1 1 2 0;
#X connect 2 0 6 0;
#X connect 4 1 1 0;
#X connect 5 0 7 0;
#X connect 5 1 7 1;
#X restore 301 215 pd messages;
#N canvas 67 87 450 300 scales 0;
#X obj 231 44 receive RRfBB%6;
#X msg 231 113 read scales.txt;
#X obj 231 138 text define gridscales%%;
#X obj 231 66 spigot 1;
#X obj 231 88 t b f;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 4 1 3 1;
#X restore 301 193 pd scales;
#N canvas 523 173 804 505 id 0;
#X obj 262 307 f -1;
#X obj 262 330 makefilename %i-masteron&&;
#X obj 188 379 send;
#X obj 225 307 t f;
#X obj 188 307 f 1;
#X obj 188 224 receive masteronto&&;
#X obj 188 253 spigot 1;
#X obj 371 243 t f;
#X obj 371 274 del 250;
#X obj 371 296 f 1;
#X obj 188 277 t b f b f b b b f;
#X obj 268 49 max;
#X obj 268 71 t f f;
#X msg 268 116 resize \$1;
#X obj 268 93 change;
#X obj 268 138 array define grd%-IDshare 1;
#X obj 268 27 receive grd%-IDsharer;
#X obj 288 161 array define grd%-colshare 1;
#X obj 585 113 f -1;
#X obj 556 88 f 1;
#X obj 556 65 receive updub###;
#X obj 585 88 receive downdub###;
#X obj 585 213 until;
#X obj 585 190 f 1e+07;
#X obj 585 237 f;
#X obj 585 260 +;
#X obj 585 307 mod;
#X obj 612 307 div;
#X obj 612 330 abs;
#X obj 612 353 moses 2;
#X obj 651 376 t b;
#X obj 612 447 t f b;
#X obj 585 283 t f f f;
#X obj 585 400 tabread grd%-IDshare;
#X obj 585 423 sel 0;
#X obj 568 163 t b b f b;
#X obj 568 139 spigot 1;
#X obj 670 165 f 1;
#X obj 669 139 t f;
#X obj 469 267 - 1;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 7 0 6 1;
#X connect 8 0 9 0;
#X connect 9 0 6 1;
#X connect 10 0 4 0;
#X connect 10 1 1 0;
#X connect 10 2 3 0;
#X connect 10 3 0 1;
#X connect 10 4 0 0;
#X connect 10 5 8 0;
#X connect 10 6 7 0;
#X connect 10 7 39 0;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 12 1 11 1;
#X connect 13 0 15 0;
#X connect 13 0 17 0;
#X connect 14 0 13 0;
#X connect 14 0 26 1;
#X connect 14 0 27 1;
#X connect 16 0 11 0;
#X connect 18 0 36 0;
#X connect 19 0 36 0;
#X connect 20 0 19 0;
#X connect 21 0 18 0;
#X connect 22 0 24 0;
#X connect 23 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 32 0;
#X connect 26 0 33 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 1 30 0;
#X connect 30 0 22 1;
#X connect 31 0 6 0;
#X connect 31 1 22 1;
#X connect 32 0 26 0;
#X connect 32 1 27 0;
#X connect 32 2 24 1;
#X connect 33 0 34 0;
#X connect 34 1 31 0;
#X connect 35 0 37 0;
#X connect 35 1 23 0;
#X connect 35 2 25 1;
#X connect 35 3 38 0;
#X connect 36 0 35 0;
#X connect 37 0 36 1;
#X connect 38 0 36 1;
#X connect 39 0 24 1;
#X restore 301 237 pd id;
#X obj 152 46 declare -path ../;
#N canvas 376 192 450 365 MIDI 0;
#X msg 167 86 read control-MIDI-layout.txt;
#X obj 167 109 text define control-layout^^&;
#X obj 140 61 t b b;
#X obj 99 107 until;
#X obj 99 153 t f f;
#X obj 99 199 text get control-layout^^&;
#X obj 126 176 text delete control-layout^^&;
#X obj 99 130 f 11;
#X obj 99 222 list trim;
#X obj 99 245 route bang buffer-time:;
#X obj 166 293 s buffertime%^%;
#X obj 140 38 loadbang;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 2 1 0 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 8 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 9 0 3 1;
#X connect 9 1 10 0;
#X connect 11 0 2 0;
#X restore 301 171 pd MIDI text;
#N canvas 622 89 650 679 cell 1;
#X obj 316 73 receive cellbuff*u(i;
#X obj 478 133 receive bfclear(()));
#X obj 378 426 clone ctlbuff 80;
#X obj 331 26 receive cellbuff*u(i-1;
#X obj 331 49 cyclone/zl rot 1;
#X obj 316 98 route 1 2 3 4;
#X text 480 40 CHANNELS \; 1 = colour on/off (cell \, colour) \; 2
= flash (cell \, colour) \; 3 = pulse (cell \, colour) \; 4 = sysex
(whatever);
#N canvas 67 89 450 558 cellbuff 0;
#X obj 183 109 sel -1;
#X obj 183 132 f 1e+07;
#X obj 144 58 t b l f;
#X obj 144 183 del 20;
#X msg 178 269 line 0 \, bang;
#X msg 161 358 clear;
#X obj 145 36 inlet;
#X obj 144 213 t b b b b;
#X obj 178 315 s sysex2(((*;
#X obj 195 235 s sysex1(((*;
#X obj 144 427 s sysex3(((*;
#X obj 183 86 text search cellbuff(((4);
#X obj 163 157 text set cellbuff(((4);
#X obj 178 292 text sequence cellbuff(((4);
#X obj 161 381 text define cellbuff(((4);
#X obj 356 348 print 44;
#X connect 0 0 1 0;
#X connect 0 1 12 1;
#X connect 1 0 12 1;
#X connect 2 0 3 0;
#X connect 2 1 12 0;
#X connect 2 2 11 0;
#X connect 3 0 7 0;
#X connect 4 0 13 0;
#X connect 5 0 14 0;
#X connect 6 0 2 0;
#X connect 7 0 10 0;
#X connect 7 1 5 0;
#X connect 7 2 4 0;
#X connect 7 3 9 0;
#X connect 11 0 0 0;
#X connect 13 0 8 0;
#X connect 13 0 15 0;
#X restore 372 150 pd cellbuff;
#X obj 248 391 f 240;
#X obj 189 391 f 32;
#X obj 159 391 f 41;
#X obj 130 391 f 2;
#X obj 101 391 f 24;
#X obj 59 391 f 247;
#X obj 135 457 midiout;
#X obj 101 245 t b b b b f b, f 25;
#X obj 101 219 receive sysex1(((*;
#X obj 58 310 receive sysex2(((*;
#X obj 59 358 receive sysex3(((*;
#X obj 58 333 drip;
#X obj 334 321 noteout;
#X obj 316 273 cellbuff 1 10;
#X msg 287 360 55 112 1;
#X obj 334 245 cellbuff 2 35;
#X obj 353 210 cellbuff 3 40;
#X connect 0 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 21 0;
#X connect 5 1 23 0;
#X connect 5 2 24 0;
#X connect 5 3 7 0;
#X connect 8 0 14 0;
#X connect 9 0 14 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 13 0 14 0;
#X connect 15 0 12 0;
#X connect 15 1 11 0;
#X connect 15 2 10 0;
#X connect 15 3 9 0;
#X connect 15 4 14 0;
#X connect 15 5 8 0;
#X connect 16 0 15 0;
#X connect 17 0 19 0;
#X connect 18 0 13 0;
#X connect 19 0 14 0;
#X connect 21 0 20 0;
#X connect 22 0 20 0;
#X connect 23 0 20 0;
#X connect 24 0 20 0;
#X restore 300 149 pd cell buffer;
#X obj 68 125 array define -k padd(())) 8;
#A 0 -0.5 0 0 0 0 0 0 0;
#X obj 68 103 array define padd2(())) 8;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
