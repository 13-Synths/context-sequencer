#N canvas 544 85 575 687 10;
#X obj 132 43 inlet;
#X obj 423 540 outlet;
#X text 51 12 read bpoint and point. IF point is less \, write \, if
not \, return next bpoint.;
#X obj 149 178 sort;
#X obj 170 201 array set \$1-sort;
#X obj 149 225 cyclone/iter;
#X obj 149 247 t f b;
#X obj 176 270 f;
#X obj 202 270 + 1;
#X obj 176 293 tabread \$1-sort;
#X obj 203 340 >=;
#X obj 176 315 t f f;
#X obj 347 194 receive \$1-nsize1;
#X obj 149 365 demux;
#X obj 104 390 unpack;
#X obj 149 340 pack;
#X obj 176 390 unpack;
#X obj 209 415 -;
#X text 280 139 1: combine x values of p and bp into list;
#X obj 383 81 array define \$1-sort 1;
#X text 283 168 2: sort in ascending order and set indices to array
;
#X text 276 280 3: iterate x values with corresponding indices;
#X text 240 343 4: determine whether x value is from p or bp based
on index no.;
#X text 35 89 p = point \; bp = bpoint;
#X obj 18 287 t b f;
#X obj 18 309 +;
#X obj 18 331 array size \$1-sort;
#X obj 209 519 tabread \$1-y-1-2;
#X obj 137 549 collect;
#X obj 152 622 collect;
#X obj 152 644 t l l;
#X obj 179 667 list length;
#X obj 137 519 t b b f f f;
#X obj 200 691 makefilename \$1-bpl-%i;
#X obj 179 715 send;
#X obj 152 775 send;
#X obj 173 751 makefilename \$1-bpy-%i;
#X obj 137 597 send;
#X text 238 405 5: if bp \, fetch correct x and y values and collect
;
#X text -107 521 6: if p \, set index value to send addresses and bang
x and y collects, f 38;
#X text 237 611 result: send x values \, y values and no. of terms
to correct io.pd abstraction., f 41;
#X obj 158 573 makefilename \$1-bpx-%i;
#X obj 48 202 v \$1-nsize1;
#X obj 176 415 * 128;
#X obj 18 265 receive \$1-nsize2;
#X obj 218 134 spigot;
#X obj 132 65 t b b b f;
#X obj 149 112 array get \$1-x-1-2;
#X obj 166 88 array get \$1-x-1-1;
#X obj 149 156 list prepend;
#X obj 170 470 receive \$1-nsize2;
#X obj 137 494 spigot;
#X obj 289 102 array get \$1-x-1-2;
#X obj 307 77 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 289 124 print x2;
#X obj 437 7 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 419 32 array get \$1-x-1-1;
#X obj 419 54 print x1;
#X obj 206 445 receive c\$1sbyx;
#X obj 176 445 / 1;
#X obj 347 216 t f f f f f;
#X obj 347 238 sel 0;
#X obj 290 471 sel 0;
#X obj 290 493 s \$1-bpb;
#X obj 224 390 receive \$1-:size;
#X obj 423 518 receive \$1-rego;
#X connect 0 0 46 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 5 0 6 0;
#X connect 6 0 15 0;
#X connect 6 1 7 0;
#X connect 7 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 1;
#X connect 9 0 11 0;
#X connect 10 0 13 1;
#X connect 11 0 15 1;
#X connect 11 1 10 0;
#X connect 12 0 60 0;
#X connect 13 0 14 0;
#X connect 13 1 16 0;
#X connect 14 1 51 0;
#X connect 15 0 13 0;
#X connect 16 0 43 0;
#X connect 16 1 17 0;
#X connect 17 0 27 0;
#X connect 24 0 25 0;
#X connect 24 1 25 1;
#X connect 25 0 26 0;
#X connect 27 0 29 1;
#X connect 28 0 37 0;
#X connect 29 0 30 0;
#X connect 30 0 35 0;
#X connect 30 1 31 0;
#X connect 31 0 34 0;
#X connect 32 0 28 0;
#X connect 32 1 29 0;
#X connect 32 2 41 0;
#X connect 32 3 36 0;
#X connect 32 4 33 0;
#X connect 33 0 34 1;
#X connect 36 0 35 1;
#X connect 41 0 37 1;
#X connect 42 0 51 0;
#X connect 43 0 59 0;
#X connect 44 0 24 0;
#X connect 45 0 49 1;
#X connect 46 0 42 0;
#X connect 46 1 47 0;
#X connect 46 2 48 0;
#X connect 46 3 7 1;
#X connect 47 0 49 0;
#X connect 48 0 45 0;
#X connect 49 0 3 0;
#X connect 50 0 51 1;
#X connect 50 0 62 0;
#X connect 51 0 32 0;
#X connect 52 0 54 0;
#X connect 53 0 52 0;
#X connect 55 0 56 0;
#X connect 56 0 57 0;
#X connect 58 0 59 1;
#X connect 59 0 28 1;
#X connect 60 0 61 0;
#X connect 60 1 45 1;
#X connect 60 2 25 0;
#X connect 60 3 10 1;
#X connect 60 4 17 1;
#X connect 61 0 49 1;
#X connect 62 0 63 0;
#X connect 64 0 43 1;
#X connect 65 0 1 0;
