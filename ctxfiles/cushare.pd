#N canvas 67 143 514 388 10;
#X declare -path ../;
#X obj 179 105 array define %&nou;
#N canvas 707 242 430 174 ^&*-dsmall1 0;
#X text 336 48 0 -5 \; 0 5 \; 10 5 \; 10 -5;
#X obj 35 63 filledcurve 65 1 1 -5 -5 -5 5 5 5 5 -5;
#X obj 32 27 struct ^&*-dsmall1 float x float y symbol onoff;
#X obj 51 113 drawsymbol onoff -3 -6;
#X restore 114 168 pd ^&*-dsmall1;
#N canvas 223 512 430 142 ^&*-dsmall2 0;
#X obj 35 62 filledcurve 20 1 1 -5 -5 -5 5 5 5 5 -5;
#X obj 32 26 struct ^&*-dsmall2 float x float y symbol onoff;
#X obj 51 113 drawsymbol onoff -3 -6 999;
#X restore 218 168 pd ^&*-dsmall2;
#X msg 44 108 read pascal.txt;
#X obj 44 132 text define £"pascal);
#X obj 44 84 iemguts/initbang;
#X msg 17 210 read chelp.txt;
#X obj 17 234 text define £""-help;
#X obj 220 205 receive £""-help;
#X msg 220 229 line 0 \, bang;
#X obj 220 253 text sequence £""-help;
#X obj 220 277 route bang;
#X obj 220 325 print -n;
#X msg 220 301  ;
#X obj 287 300 list trim;
#X obj 222 50 shared ctxfiles/cushare 0;
#N canvas 201 189 1024 557 commands 0;
#X obj 416 105 t b a;
#X obj 112 184 cyclone/zl iter 1;
#X obj 416 81 receive *ujK9)erD;
#X obj 671 165 ctxfiles/recompile \$0 cothr;
#X obj 671 194 ctxfiles/br2 demux 2 \; #f t \; #f gs :x \; #f gs :y
\; #f gs :size \; #f gs :yu \; #f gs :yl \; #f gs :point1 \; #f gs
:point2 \; #f gs :name \; #f gs :color \; #f gs :speed \; #f gs :time
\; #f gs :duplicate \; #f gs :mirror-x \; #f gs :mirror-y \; #f gs
:scale \; #f gs :ec \; #f gs :name2 \; #f gs :lock \; #f gs savelist
\; #f s £""-help \; #f gs propload;
#X obj 112 207 ctxfiles/br2 route 1 \; x gtfs \$0 #f x 128 \, :x #l
\; y gtfs \$0 #f y 79 \, :y #l \; size gtfs \$0 #f size 128 \, :size
#l \; yu gtfs \$0 #f yu \, :yu #l \, y1 #l \; yl gtfs \$0 #f yl \,
:yl #l \, y2 #l \; point1 gtfs \$0 #f point1 bang \, points #l \, point
#l \, end #l \, :point1 #l \; point2 gtfs \$0 #f point2 bang \, bpoints
#l \, bpoint #l \, curve #l \, :point2 #l \; name gtfs \$0 #f name
bang \, :name #l \; color gtfs \$0 #f color -232534 \, colour #l \,
:color #l \; speed gtfs \$0 #f speed 10 \, :speed #l \; time gtfs \$0
#f time 1000 \, :time #l \; duplicate gtfs \$0 #f duplicate 0 \, :duplicate
#l \; mirror-x gtfs \$0 #f mirror-x 0 \, :mirror-x #l \; mirror-y gtfs
\$0 #f mirror-y 0 \, :mirror-y #l \; scale gtfs \$0 #f scale 1 \, :scale
#l \; ec gtfs \$0 #f ec 0 \, :ec #l \; name2 gtfs \$0 #f name2 0 \,
:name2 #l \; lock gtfs \$0 #f lock 0 \, :lock #l \; savelist tf \$0
#f \; help tf \$0 #f \; loadproperties tf \$0 #f \; ## s \$0-cothr
, f 76;
#X connect 0 0 3 0;
#X connect 0 1 1 0;
#X connect 1 0 5 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X restore 388 148 pd commands;
#X msg 401 271 vis 1;
#X obj 401 293 iemguts/sendcanvas;
#N canvas 613 261 450 300 key 0;
#X obj 113 43 keyname;
#X obj 159 175 t f;
#X obj 159 202 change;
#X obj 191 128 f 1;
#X obj 159 76 sel Up Down Left Right;
#X obj 159 224 s r%gJN3-x;
#X obj 159 103 t b b;
#X obj 234 103 t b b;
#X obj 266 128 f 2;
#X obj 159 153 del 3000;
#X connect 0 1 4 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 4 1 6 0;
#X connect 4 2 7 0;
#X connect 4 3 7 0;
#X connect 6 0 9 0;
#X connect 6 1 3 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 8 0 2 0;
#X connect 9 0 1 0;
#X restore 389 176 pd key;
#X obj 401 249 receive cushare;
#X obj 222 74 declare -path ../;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 11 1 14 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 17 0 18 0;
#X connect 20 0 17 0;
